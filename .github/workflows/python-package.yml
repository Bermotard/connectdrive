name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run unit tests with coverage
      run: |
        python -m pytest tests/unit/ -v --cov=src --cov-report=xml
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
    
    - name: Run integration tests
      if: matrix.python-version == '3.10'  # Exécuter uniquement sur une version de Python
      run: |
        python -m pytest tests/integration/ -v -m "integration"
    
    - name: Run flake8
      run: |
        pip install flake8
        # Arrêter la construction pour les erreurs critiques
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Avertissements pour le style (ne fait pas échouer le build)
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics || true
    
    - name: Run mypy
      if: always()
      run: |
        pip install mypy
        mypy --install-types --non-interactive src/
      continue-on-error: true  # Ne fait pas échouer le build pour les erreurs de typage
